
. "$(dirname ${BASH_SOURCE[0]})/testlib.sh"

VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
. "${VSI_COMMON_DIR}/linux/docker_functions.bsh" #Need to be sourced for docker_compose_override
. "${VSI_COMMON_DIR}/linux/docker_compose_override"

function head()
{
  echo -e "version: '${1-3.2}'\nservices:"
}

function service()
{
  echo -e "\n  ${1}:"
}

function volumes()
{
  echo -e "\n    volumes:"
}

function vol()
{
  echo -e "\n      - ${1}"
}

function environment()
{
  echo -e "\n    environment:"
}

function env()
{
  echo -e "\n      - ${1}"
}

begin_test "Docker compose override variable substitution"
(
  set -eu
  [ "$(_docker_compose_override_var_sub 'x')" = "" ]
  [ "$(_docker_compose_override_var_sub '$foo_bar')" = "foo_bar" ]
  [ "$(_docker_compose_override_var_sub '${FOO_BAR}')" = "FOO_BAR" ]
)
end_test

begin_test "Environment echo"
(
  set -eu
  ans="    environment:"
  ans+=$'\n      - test=15'
  [ "$(_env_echo "      - test=15")" = "${ans}" ]
  ans+=$'\n      - foo=bar'
  [ "$(_env_echo "      - test=15";
       _env_echo "      - foo=bar")" = "${ans}" ]
)
end_test

begin_test "No services"
(
  set -eu
  [ "$(generate_docker_compose_override PROJECT)" = "$(head)" ]
)
end_test

begin_test "CLI"
(
  set -eu
  ans="$(head)$(service test1)"
  # TEST_VOLUMES="/tmp:/temp:ro"
  # ans+="$(vol /tmp:/temp:ro)"
  [ "$("${VSI_COMMON_DIR}/linux/docker_compose_override" PROJECT test1)" = "${ans}" ]
)
end_test

begin_test "COMPOSE_VERSION 2.3"
(
  set -eu
  ans="$(head 2.3)$(service test1)$(service test2)"
  COMPOSE_VERSION=2.3
  [ "$(generate_docker_compose_override PROJECT test1 test2)" = "${ans}" ]
)
end_test

begin_test "Just docker compose dynamic volumes"
(
  set -eu
  JUST_PROJECT_PREFIX=TEST

  ans="$(head)$(service test1)$(volumes)"

  ans1="${ans}$(vol "$(real_path "${TRASHDIR}")":/trash:z)"
  TEST_VOLUMES=(".:/trash:z")
  override="$(generate_docker_compose_override TEST test1)"
  [ "${override}" = "${ans1}" ]

  TEST_VOLUMES=("/tmp:/temp:ro")
  ans+="$(vol "$(real_path "/tmp")":/temp:ro)"
  override="$(generate_docker_compose_override TEST test1)"
  [ "${override}" = "${ans}" ]

  TEST_TEST1_VOLUMES=("/src:/source:rw")
  ans+="$(vol "$(real_path "/src")":/source:rw)"
  override="$(generate_docker_compose_override TEST test1)"
  [ "${override}" = "${ans}" ]
)
end_test

begin_test "Just docker compose dynamic environment"
(
  set -eu
  JUST_PROJECT_PREFIX=TEST

  ans="$(head)$(service test1)$(environment)$(env TEST=1)"



)
end_test

begin_test "just_docker_entrypoint_links"
(
  set -eu
)
end_test