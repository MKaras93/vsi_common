#!/usr/bin/env bash

. "$(dirname ${BASH_SOURCE[0]})/testlib.sh"

VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"

function mock_pip()
{
  if isin --no-deps ${@+"${@}"}; then
    echo "Collecting scipy==0.19.1
  Using version 0.19.1 (newest of versions: 0.19.1)
Successfully downloaded scipy"
  else
    echo "Collecting scipy==0.19.1
  Using version 0.19.1 (newest of versions: 0.19.1)
Collecting numpy>=1.8.2 (from scipy==0.19.1)
  Using version 1.14.1 (newest of versions: 1.8.2, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.10.0.post2, 1.10.1, 1.10.2, 1.10.4, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.12.0, 1.12.1, 1.13.0, 1.13.1, 1.13.3, 1.14.0, 1.14.1)
  Using cached numpy-1.14.1-cp36-cp36m-manylinux1_x86_64.whl
Successfully downloaded scipy numpy"
  fi
}

begin_test "get packages"
(
  setup_test

  . "${VSI_COMMON_DIR}/linux/update_python_requirements.bsh"

  ans=$'\nscipy@0.19.1\nnumpy@1.14.1'
  [ "$(PIP=mock_pip get_packages scipy==0.19.1)" = "${ans}" ]

)
end_test

begin_test "write requirements"
(
  setup_test

  . "${VSI_COMMON_DIR}/linux/update_python_requirements.bsh"

  write_requirement "file.txt" scipy@0.19.1
  write_requirement "file.txt" matplotlib@
  write_requirement "file.txt" 'Django>=1.11.0@'

  [ "$(cat "file.txt")" == $'scipy==0.19.1\nmatplotlib\nDjango>=1.11.0' ]
)
end_test

begin_test "update requirements"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/update_python_requirements.bsh"

  echo "scipy==0.0.1" > input.txt
  PIP=mock_pip update_requirements input.txt output.txt
  [ "$(cat "output.txt")" == $'scipy==0.19.1\nnumpy==1.14.1' ]
)
end_test

begin_test "update main requirements"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/update_python_requirements.bsh"

  echo "scipy==0.0.1" > input.txt
  PIP=mock_pip update_main_requirements input.txt
  [ "$(cat "input.txt")" == $'scipy==0.19.1' ]
)
end_test

begin_test "update derived requirements"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/update_python_requirements.bsh"

  echo "scipy==0.0.1" > input.txt
  echo "scipy==0.0.1" > custom.txt

  PIP=mock_pip update_derived_requirements input.txt custom.txt output.txt

  ans="#Autogenerated file. Please run just update-python-requirements to update"
  ans+=$'\nscipy==0.19.1'
  ans+=$'\nnumpy==1.14.1'

  [ "$(cat output.txt)" = "${ans}" ]
)
end_test

begin_test "update requirements"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/update_python_requirements.bsh"

  echo "scipy==0.0.1" > requirements_python2.txt

  PIP2=mock_pip PIP3=mock_pip requirements=y update_python_requirements

  [ "$(cat requirements_python2.txt)" = "scipy==0.19.1" ]

  ans="#Autogenerated file. Please run just update-python-requirements to update"
  [ "$(cat requirements_python3_derived.txt)" = "${ans}" ]

  ans+=$'\nscipy==0.19.1'
  ans+=$'\nnumpy==1.14.1'
  [ "$(cat requirements_python2_derived.txt)" = "${ans}" ]
)
end_test

begin_test "update requirements CLI"
(
  setup_test

  echo "scipy==0.0.1" > requirements_python2.txt

  # chmod doesn't fake right on mingw64 without this
  echo '#!/usr/bin/env bash' > mock_pip
  type mock_pip | tail -n +3 >> mock_pip
  chmod 755 mock_pip

  PIP2=./mock_pip PIP3=./mock_pip requirements=y bash update_python_requirements.bsh

  [ "$(cat requirements_python2.txt)" = "scipy==0.19.1" ]

  ans="#Autogenerated file. Please run just update-python-requirements to update"
  [ "$(cat requirements_python3_derived.txt)" = "${ans}" ]

  ans+=$'\nscipy==0.19.1'
  ans+=$'\nnumpy==1.14.1'
  [ "$(cat requirements_python2_derived.txt)" = "${ans}" ]
)
end_test

function mock_pip()
{
  echo "Collecting torch==0.3.0 from http://download.pytorch.org/whl/torch-0.3.0.whl (from -r custom.txt (line 1))
Collecting subprocess32; python_version < \"3.0\" (from jupyterlab==0.31.12->-r requirements.txt (line 7))
  Using version 3.2.7 (newest of versions: 3.2.5, 3.2.6, 3.2.7)
Collecting widgetsnbextension~=3.1.0 (from ipywidgets==7.1.2->-r requirements.txt (line 8))
  Using version 3.1.4 (newest of versions: 3.1.0, 3.1.1, 3.1.2, 3.1.3, 3.1.4)
Collecting backports.shutil_get_terminal_size (from ipython==5.5.0->-r requirements.txt (line 5))
  Using version 1.0.0 (newest of versions: 1.0.0)
Collecting ipykernel (from notebook==5.4.1->-r requirements.txt (line 6))
  Using version 4.8.2 (newest of versions: 4.4.1, 4.5.0, 4.5.1, 4.5.2, 4.6.0, 4.6.1, 4.7.0, 4.8.0, 4.8.1, 4.8.2)
Collecting terminado>=0.8.1 (from notebook==5.4.1->-r requirements.txt (line 6))
  Using version 0.8.1 (newest of versions: 0.8.1)
Successfully downloaded torch subprocess32 widgetsnbextension backports.shutil_get_terminal_size ipykernel terminado"
}

begin_test "Test various get-package patterns"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/update_python_requirements.bsh"

  echo "http://download.pytorch.org/whl/torch-0.3.0.whl" > custom.txt

  PIP=mock_pip update_derived_requirements input.txt custom.txt output.txt

  ans="#Autogenerated file. Please run just update-python-requirements to update"
  ans+=$'\nhttp://download.pytorch.org/whl/torch-0.3.0.whl'
  ans+=$'\nsubprocess32==3.2.7'
  ans+=$'\nwidgetsnbextension==3.1.4'
  ans+=$'\nbackports.shutil_get_terminal_size==1.0.0'
  ans+=$'\nipykernel==4.8.2'
  ans+=$'\nterminado==0.8.1'

  [ "$(cat output.txt)" = "${ans}" ]
)
end_test
