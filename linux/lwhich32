#!/usr/bin/env bash

#Script depends: isin

set -eu

function is32bit()
{
  if [ "$(nm -D "$1" 2>/dev/null | sed -n '/^[0-9A-Fa-f]\{8,\}/ {p; q;}' | grep -v "^[0-9A-Fa-f]\{16\}" | wc -l)" == "1" ]; then 
    return 0
  fi
  return 1
}

matches=()
filenames=()

if [ -n "${LD_LIBRARY_PATH+${LD_LIBRARY_PATH}}" ]; then
  #set -f
  #IFS_OLD="${IFS}"
  IFS=:
  LIBRARY_PATHS=("$LD_LIBRARY_PATH")
  IFS=$'\n' #I don't want splitting arrays on space or tab... JUST in case?

  for d in "${LIBRARY_PATHS[@]}"; do
    for match in $(ls "$d" | grep "^$1"); do
      if [ -e "$d/$match" ] && is32bit "$d/$match" && ! isin "$(basename "$d/$match")" ${filenames+"${filenames[@]}"}; then
        matches+=("$d/$match")
        filenames+=("$match")
      fi
    done
  done
fi

#This only complicated the wildcard idea, and I don't CARE about this case
for match in $(ldconfig -p | grep $'^\t'"$1" | awk '{print $(NF)}'); do
  if is32bit "${match}" && ! isin "$(basename "$match")" ${filenames+"${filenames[@]}"}; then
    matches+=("${match}")
    filenames+=("$(basename "$match")")
  fi
done

for match in ${matches+"${matches[@]}"}; do
  echo "$match"
done