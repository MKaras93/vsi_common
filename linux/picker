#!/usr/bin/env bash

#*# linux/picker

#**
# ======
# Picker
# ======
#
#**

##****F* vsi/picker
# NAME
#   picker - Bash CLI version of picker
# INPUTS
#   $1... - List of choices to pick from
# OUTPUT
#   stdout - The choice that was selected
# EXAMPLE
#   my_choice=$(picker Choice1 Choice2 ...)
# RETURN VALUE
#   The choice selected, between 1 and N
# AUTHOR
#   Andy Neff
##***

##****f* picker/picker
# NAME
#   picker - Basic TUI for picking an option from a list of choices
# DESCRIPTION
#   Prints list of choices, and reads an answer until the user gives a valid
#   response
# INPUTS
#   $1 - Variable name to store choice in
#   $2... - List of choices
# OUTPUT
#   ${!1} - Stores text of choice selected
#   ${!1}_index - Store the index in the array of the choice selected (starting
#                 at zero. So if 2 is selected, that's index 1)
#   TUI outputs to stderr.
# EXAMPLE
#   picker var "Choice one" "Choice II" "Choice 3"
#
#   #if 2 is selected
#   #var="Choice II"
#   #var_index=1
# BUGS
#   If one of your choices has a newline in it, the value of ${!1} will only
#   contain the first line
# AUTHOR
#   Andy Neff
##***
function picker()
{
  if (( $# < 2 )); then
    return 0
  fi

  local key
  key=$1
  shift 1

  local args=("${@}")

  local x

  local pad="$(awk '{print int(log($1)/log(10)+1e-10)+1}' <<< "$#")"

  while true; do
    for x in "${!args[@]}"; do
      x=$((x+1))
      printf "%${pad}s) ${!x}\n" $x >&2
    done
    echo >&2

    read -r -p "Please pick a number between 1 and $#: " x

    if [[ ${x} =~ ^[0-9]+$ ]] && [ "${x}" -gt 0 ] && [ "${x}" -le $# ]; then
      IFS='' read -r "${key}" <<< "${!x}"
      IFS='' read -r "${key}_index" <<< "$((x-1))"
      break
    fi
    echo
  done
}


if [[ ${BASH_SOURCE[0]} == ${0} ]] || [[ $(basename ${BASH_SOURCE[0]}) == ${0} ]]; then
  picker my_choice ${@+"${@}"}
  echo ${my_choice}
  exit $((${my_choice_index--1}+1))
fi