#****F* vsi/common_source.bsh
# NAME
#   common_source.bsh - Cross OS compatible common values files
# DESCRIPTION
#   There are many differences between bash scripts between Windows (using
#   mingw/cygwin), MacOS (which uses a MODIFIED version of bash 3.2), and the
#   many versions of Linux out there, that primarily use bash 4+. In addition to
#   the shell behaving different, many piece of basic information are retrieved
#   in different ways, such as the kind of OS, number of processor cores, etc...
#   This sets a collection of variables to try and normalize these behaviors for
#   other vsi scripts to use, no matter what OS they are running on.
# AUTHOR
#   Andy Neff
#***

#****d* common_source.bsh/VSI_OS
# NAME
#   VSI_OS - Operating system name
# DESCRIPTION
#   Lowercase representation of the Operating system name. Based off of the
#   OSTYPE environment variable, which is always defined in Bourne Shell.
# EXAMPLE
#   Values include linux, darwin, windows, bsd, solaris, and unknown
# AUTHOR
#   Andy Neff
#***
case "$OSTYPE" in
  linux*)
    VSI_OS=linux
    ;;
  darwin*)
    VSI_OS=darwin
    ;;
  win32*|cygwin*|msys*)
    VSI_OS=windows
    ;;
  bsd*|freebsd*)
    VSI_OS=bsd
    ;;
  solaris*)
    VSI_OS=solaris
    ;;
  *)
    VSI_OS=unknown
    ;;
esac

#TODO: OS Distro

#TODO: OS Version

#****d* common_source.bsh/VSI_NUMBER_CORES
# NAME
#   VSI_NUMBER_CORES - Number of CPU cores
# DESCRIPTION
#   Determines the number of CPU cores available on the machine.
# AUTHOR
#   Andy Neff
#***
case "${VSI_OS}" in
  darwin)
    VSI_NUMBER_CORES=$(\sysctl -n hw.ncpu)
    ;;
  windows)
    VSI_NUMBER_CORES="${NUMBER_OF_PROCESSORS}"
    ;;
  *)
    if command -v nproc &>/dev/null; then
      VSI_NUMBER_CORES=$(nproc)
    else
      echo "Warning: unable to determine number of cores" >&2
      VSI_NUMBER_CORES=4
    fi
    ;;
esac
