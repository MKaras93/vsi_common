#!/usr/bin/env bash

set -euE

export CWD="$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"

#****just/Justfile_pipfile
# NAME
#   just_pipenv.bsh - Bootstrap creating a Pipfile
# DESCRIPTION
#   When starting a new project, creating a new Pipfile and Pipfile.lock is not
#   a trivial task. You can't just touch an empty file, as that will result in
#   an empty (not populated) Pipfile and then error when processing Pipfile.lock.
#   The purpose of this Justfile is to generate a Pipfile in a directory where
#   none exits.
# PARAMETERS
#   PRE_CMD - Environment variable added at the beginning of the bash -c
#             execution to run commands (like installing python) before running
#             pipenv
# USAGE
#   Justfile_pipfile init_pipfile3 {docker image name} {Pipfile destination dir}
#   - Creates the Pipfiles in the destination directory, using the docker image.
#     This will explicitly use python3 and not the python executable/symlink.
#     python3 and ca-certificates must be installed for this to work. Set 
#     PRE_CMD to execute commands before initializing pipenv. For example,
#     PRE_CMD can be used to install ca-certificates, etc.
#
#   Various other targets exist for convenience in the form:
#
#     [debian_,centos_,fedora_][no_python_]init_pipfile[2,3]
#
#   specifying, respectively, the flavor of linux, whether python is available
#   in the image, and whether python 2 or 3 is being used.
# EXAMPLE
#   Justfile_pipfile init_pipfile3 python:3 /tmp/
# USES
#   python[2,3], ca-certificates
# AUTHOR
#   Andy Neff
#***

function caseify()
{
  arg=$1
  shift 1
  case $arg in
    init_pipfile3) # Must have ca-certificates and python3 installed. Use the \
                   # PRE_CMD environment variable to install them if they are \
                   # not.
      Docker run --rm --entrypoint env --mount "type=bind,source=${2},destination=/target" ${1} bash -c "
        set -eu
        ${PRE_CMD-}
     "$'TEMP_DIR=$(mktemp -d)
        python3 -c "import urllib.request as u; print(u.urlopen(\'https://bootstrap.pypa.io/get-pip.py\').read().decode())" > "${TEMP_DIR}/p.py"
        PYTHONUSERBASE="${TEMP_DIR}" python3 "${TEMP_DIR}/p.py" --user setuptools -U
        PYTHONUSERBASE="${TEMP_DIR}" python3 "${TEMP_DIR}/p.py" --user pipenv -U
        cd /target
        unset PIPENV_PIPFILE
        : ${LC_ALL=C.UTF-8}
        : ${LANG=C.UTF-8}
        export LC_ALL
        export LANG
        PATH="${PATH}:${TEMP_DIR}/bin" \
          PYTHONPATH=$(echo "${TEMP_DIR}"/lib/python*/site-packages/) \
          pipenv install'
      extra_args+=2
      ;;

    debian_init_pipfile3) # Version for debian (apt-get)
      (PRE_CMD="${PRE_CMD-}
                apt-get update
                apt-get install -y --no-install-recommends ca-certificates"; \
        justify init_pipfile3 "${1}" "${2}")
      extra_args+=2
      ;;

    debian_no_python_init_pipfile3) # Version for debian (apt-get) without python3 preinstalled
      (PRE_CMD="${PRE_CMD-}
                apt-get update
                apt-get install -y --no-install-recommends python3 ca-certificates"; \
        justify init_pipfile3 "${1}" "${2}")
      extra_args+=2
      ;;

    fedora_init_pipfile3) # Version for fedora (dnf)
      (PRE_CMD="${PRE_CMD-}
                dnf install -y ca-certificates"; \
        justify init_pipfile3 "${1}" "${2}")
      extra_args+=2
      ;;

    fedora_no_python_init_pipfile3) # Version for fedora (dnf) without python3 preinstalled
      (PRE_CMD="${PRE_CMD-}
                dnf install -y python3 ca-certificates"; \
        justify init_pipfile3 "${1}" "${2}")
      extra_args+=2
      ;;

    centos_init_pipfile3) # Version for centos (yum)
      (PRE_CMD="${PRE_CMD-}
                yum install -y ca-certificates"; \
        justify init_pipfile3 "${1}" "${2}")
      extra_args+=2
      ;;

    centos_no_python_init_pipfile3) # Version for centos7 (yum) without python3 preinstalled
      (PRE_CMD="${PRE_CMD-}
                export LC_ALL=en_US.utf8
                export LANG=en_US.utf8
                yum install -y epel-release
                yum install -y python34 ca-certificates"; \
        justify init_pipfile3 "${1}" "${2}")
      extra_args+=2
      ;;

    init_pipfile2) # Must have ca-certificates and python2 installed. Use the \
                   # PRE_CMD environment variable to install them if they are \
                   # not.
      Docker run --rm --entrypoint env --mount "type=bind,source=${2},destination=/target" ${1} sh -c "
        set -eu
        ${PRE_CMD-}
     "$'TEMP_DIR=$(mktemp -d)
        python2 -c "import urllib2 as u; print u.urlopen(\'https://bootstrap.pypa.io/get-pip.py\').read()" > "${TEMP_DIR}/p.py"
        PYTHONUSERBASE="${TEMP_DIR}" python2 "${TEMP_DIR}/p.py" --user setuptools
        PYTHONUSERBASE="${TEMP_DIR}" python2 "${TEMP_DIR}/p.py" --user pipenv -U
        cd /target
        unset PIPENV_PIPFILE
        : ${LC_ALL=C.UTF-8}
        : ${LANG=C.UTF-8}
        export LC_ALL
        export LANG
        PATH="${PATH}:${TEMP_DIR}/bin" \
          PYTHONPATH=$(echo "${TEMP_DIR}"/lib/python*/site-packages/) \
          pipenv install'
      extra_args+=2
      ;;

    debian_init_pipfile2) # Version for debian (apt-get)
      (PRE_CMD="${PRE_CMD-}
                apt-get update
                apt-get install -y --no-install-recommends ca-certificates"; \
        justify init_pipfile2 "${1}" "${2}")
      extra_args+=2
      ;;

    debian_no_python_init_pipfile2) # Version for debian (apt-get) without python2 preinstalled
      (PRE_CMD="${PRE_CMD-}
                apt-get update
                apt-get install -y --no-install-recommends python ca-certificates"; \
        justify init_pipfile2 "${1}" "${2}")
      extra_args+=2
      ;;

    fedora_init_pipfile2) # Version for fedora (dnf)
      (PRE_CMD="${PRE_CMD-}
                dnf install -y ca-certificates"; \
        justify init_pipfile2 "${1}" "${2}")
      extra_args+=2
      ;;

    fedora_no_python_init_pipfile2) # Version for fedora (dnf) without python2 preinstalled
      (PRE_CMD="${PRE_CMD-}
                dnf install -y python2 ca-certificates"; \
        justify init_pipfile2 "${1}" "${2}")
      extra_args+=2
      ;;

    centos_init_pipfile2) # Version for centos (yum)
      (PRE_CMD="${PRE_CMD-}
                export LC_ALL=en_US.utf8
                export LANG=en_US.utf8"; \
        justify init_pipfile2 "${1}" "${2}")
      extra_args+=2
      ;;

    centos_no_python_init_pipfile2) # Version for centos7 (yum) without python2 preinstalled
      (PRE_CMD="${PRE_CMD-}
                export LC_ALL=en_US.utf8
                export LANG=en_US.utf8
                yum install -y python2 ca-certificates"; \
        justify init_pipfile2 "${1}" "${2}")
      extra_args+=2
      ;;

    *)
      defaultify "$arg" ${@+"${@}"}
      ;;
  esac
  return 0
}

if ! command -v justify &> /dev/null; then
  justify()
  {
    caseify ${@+"${@}"}
  }
  Docker()
  {
    ${DOCKER-docker} ${@+"${@}"}
  }
  justify ${@+"${@}"}
fi
