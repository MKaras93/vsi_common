#!/usr/bin/env bash

set -eu

#****F* vsi/group_names
# NAME
#   group_names - Determine all the group names associated with a user
# DESCRIPTION
#   On Linux, there is a relatively simple way to get all the group names,
#   unambiguously, even if the names contain spaces and parentheses. However,
#   on macos, these same features do not exist without the GNU version of id
#   which is not available without brew, etc... So this script will get that
#   information for you, one way or another.
# INPUTS
#   [$1...] - Arguments to id
# OUTPUT
#   stdout - Space delimited list of group names. Spaces in group names have
#            been replaced with _
# AUTHOR
#   Andy Neff
#***

if [[ ${OSTYPE-} == darwin* ]]; then
  groups="$(id ${@+"${@}"} 2>/dev/null)"
  # macos and windows does not allow groupnames with =
  groups="${groups#*groups=}"

  # macos and windows does not allow groupnames with commas
  # So commas are a safe separator
  OLD_IFS="${IFS}"
  IFS=,
  groups=(${groups})
  IFS="${OLD_IFS}"

  # Replace spaces with _
  groups=(${groups[@]// /_})
  # Remove trailing )
  groups=(${groups[@]/%)/})

  for x in ${!groups[@]}; do
    # Remove #(
    groups[$x]="$(echo "${groups[$x]}" | sed 's|^[0-9]*(||')"
  done

  #Echo out result
  echo "${groups[*]}"
else # Linux/windows
  # Linux can allow anything but : and space really, but windows allows spaces
  id -Gnz ${@+"${@}"} 2>/dev/null | sed 's| |_|g; s|\x00| |g; s| $||'
fi
