#!/usr/bin/env false

source "${VSI_SCRIPT_DIR}/only_functions.bsh"

: ${DUSTFILE=.dustfile}
if [ -f "${DUSTFILE}" ]; then 
  export DUST_DIR="$(cd "$(dirname "${DUSTFILE}")"; pwd)"
  safe_load "${DUSTFILE}"
else
  export DUST_DIR="$(pwd)"
fi

#Find all the relevant dockers and store the names in dockernames and dockerfiles
: ${DOCKER_REPO=$(basename "$(pwd)")}
docker_names ${DOCKER_REPO}

function run_only()
{ # image_name
  image_name=$1
  shift 1

  for i in ${!dockernames[@]}; do
    if [ "${dockernames[${i}]}" == "${image_name}" ]; then
      context_dir=$(dirname "${dockerfiles[${i}]}")
      if [ -f "${context_dir}/${just_arg#*_}.onlyfile" ]; then
        onlyfile="${context_dir}/${just_arg#*_}.onlyfile"
      else
        onlyfile="${context_dir}/.onlyfile"
      fi
      ONLYFILE="${onlyfile}" \
      only -context "$(dirname "${dockerfiles[${i}]}")" \
           --f "${dockerfiles[${i}]}" \
           -image "${image_name}" \
           "${@}"
      break
    fi
  done
}

function caseify()
{
  local just_arg=$1
  shift 1

  case ${just_arg} in
    build)
      if (( $# )) && isin "${DOCKER_REPO}:$1" ${dockernames[@]}; then
        while (( $# )) && isin "${DOCKER_REPO}:$1" ${dockernames[@]}; do
          echo "Build ${DOCKER_REPO}:$1"
          (justify build_${DOCKER_REPO}:$1)
          shift 1
          extra_args+=1
        done
      else
        for x in "${dockernames[@]}"; do
          echo "Build $x"
          (justify build_$x)
        done
      fi
      ;;
    build_*)
      run_only ${just_arg#*_} build
      ;;
    run)
      if (( $# )) && isin "${DOCKER_REPO}:$1" ${dockernames[@]}; then
        service_name="$1"
        shift 1
        extra_args+=1
        (justify "run_${service_name}" ${@+"${@}"})
        extra_args+=$#
      fi
      ;;
    run_*)
      run_only ${DOCKER_REPO}:${just_arg#*_} run ${@+"${@}"}
      extra_args+=$#
      ;;

    # My first attempt to leverage docker-compose. Not quite ready
    builddc)
      docker_compose_services
      if (( $# )) && isin $1 in "${dockerservices[@]}"; then
        while (( $# )) && isin $1 in "${dockerservices[@]}"; do
          echo "Build $1" done
          docker-compose build $1
          shift 1
          extra_args+=1
        done
      else
        docker-compose build
      fi
      ;;
    rundc) #This is mostly useless when it comes to GPU. I need nvidia-docker
      docker_compose_services
      if (( $# )) && isin $1 in "${dockerservices[@]}"; then
        while (( $# )) && isin $1 in "${dockerservices[@]}"; do
          echo "Running $1" done
          docker-compose run $1
          shift 1
          extra_args+=1
        done
      else
        docker-compose up
      fi
      ;;
    *)
      defaultify "${just_arg}" ${@+"${@}"} 
      ;;
  esac
}
