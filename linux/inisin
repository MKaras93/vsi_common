#!/usr/bin/env bash

#*# linux/inisin

#**
# ========
# In is in
# ========
#
#**
##****F* vsi/inisin
# NAME
#   inisin - Bash CLI version of inisin
# INPUTS
#   $1 - Value to search for
#   [$2...] - Values of array to search over
# OUTPUT
#   Exit code is 0 for found, 1 for not found
# SEE ALSO
#   inisin/inisin
##***

##****f* inisin/inisin
# NAME
#   inisin - Checks if any element in the array contains a value
# INPUTS
#   $1 - Value to search for (can be regex)
#   [$2...] - Values of array to search over
# OUTPUT
#   Returns 0 for found, 1 for not found
# EXAMPLE
#   inisin 3 11 22 33 44
#   # $? is 0
#   inisin 0 20 20 20
#   # $? is 1
# AUTHOR
#   Andy Neff
##***
function inisin()
{
  local val
  local x

  val=$1
  shift 1
  for x in ${@+"${@}"}; do
    if [[ ${x} =~ ${val} ]]; then
      return 0
    fi
  done
  return 1
}

if [[ ${BASH_SOURCE[0]} == ${0} ]] || [[ $(basename ${BASH_SOURCE[0]}) == ${0} ]]; then
  inisin "${@}"
  exit $?
fi