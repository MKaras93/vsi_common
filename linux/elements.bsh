#!/usr/bin/false
# Source this file

# Dynamically set an array by name specified by a variable ($1).
# >> dynamic_set_a my_array_name 11 "2 2" 33
# executes 
# >> my_array_name=(11 "2 2" 33)
# NOTE: Does not clear the array "my_array_name". so if [4] was set, it still is
function dynamic_set_a()
{
  target=$1
  shift 1
  for (( i=0; $#; i++ )); do
    read "${target}[$i]" <<< "$1"
    shift 1
  done
}

# Removes an element from an array
# >> my_array_name=(11 66 22)
# >> remove_element_a my_array_name 66
# results in
# >> my_array_name=(11 22)
function remove_element_a()
{
  local target=${1}[@]
  local t=()
  if [ "${!1+set}" == "set" ]; then
    t=( ${!target} )
  fi
  local i
  
  for i in "${!t[@]}"; do
    if [ "${t[$i]}" == "$2" ]; then
      unset t[$i]
    fi
  done
  unset $1
  dynamic_set_a $1 ${t+"${t[@]}"}
}

#Same as remove_element_a, but for a string separated by IFS ELEMENT_SEPARATOR
function remove_element()
{
  local IFS="${ELEMENT_SEPARATOR-:}"
  local target=$1
  local t2=()
  if [ "${!target+set}" == "set" ]; then
    t2=( ${!target} )
  fi
  remove_element_a t2 "$2"
  export $target="${t2[*]}"
}

# Puts/adds an entry to the end of the array, removing any previous duplicates
# >> aaa=(22 11 22 33)
# >> add_element_post_a aaa 22
# Results in
# >> aaa=(11 33 22)
function add_element_post_a()
{
  remove_element_a $1 "$2"
  local target=$1[@]
  local t=()
  if [ "${!1+set}" == "set" ]; then
    t=( ${!target} )
  fi
  dynamic_set_a $1 ${t+"${t[@]}"} "$2"
}

#Same as add_element_post_a, but for a string separated by IFS ELEMENT_SEPARATOR
function add_element_post ()
{
  local IFS="${ELEMENT_SEPARATOR-:}"
  local target=$1
  local t2=()
  if [ "${!target+set}" == "set" ]; then
    t2=( ${!target} )
  fi
  add_element_post_a t2 "$2"
  export $target="${t2[*]}"
}

# Puts/adds an entry to the beginning of the array, removing any previous duplicates
# >> aaa=(11 22 33 22)
# >> add_element_pre_a aaa 22
# Results in
# >> aaa=(22 11 33)
function add_element_pre_a()
{
  remove_element_a $1 "$2"
  local target=$1[@]
  local t=()
  if [ "${!1+set}" == "set" ]; then
    t=( ${!target} )
  fi
  dynamic_set_a $1 "$2" ${t+"${t[@]}"}
}

#Same as add_element_pre_a, but for a string separated by IFS ELEMENT_SEPARATOR
function add_element_pre ()
{
  local IFS="${ELEMENT_SEPARATOR-:}"
  local target=$1
  local t2=()
  if [ "${!target+set}" == "set" ]; then
    t2=( ${!target} )
  fi
  add_element_pre_a t2 "$2"
  export $target="${t2[*]}"
}
